{% macro program(program_name, program_settings) %}
[program:{{ program_name }}]
command={{ program_settings.pop("command") }}
stdout_events_enabled={{ program_settings.pop("stdout_events_enabled", "true") }}
stderr_events_enabled={{ program_settings.pop("stderr_events_enabled", "true") }}
stopsignal={{ program_settings.pop("stopsignal", "KILL") }}
stopasgroup={{ program_settings.pop("stopasgroup", "true") }}
autostart = %(ENV_ENABLE_{{ program_name|upper }})s
{% for setting_name, setting_value in program_settings.items() %}
{{ setting_name }}={{ setting_value }}
{% endfor %}
{% endmacro -%}

[supervisord]
nodaemon=true
silent=true

{% if include_exists("conf/supervisord-dev.conf.json") %}
{% for program_name, program_settings in include_json("conf/supervisord-dev.conf.json").get("programs", {}).items() %}
{{ program(program_name, program_settings) }}
{% endfor %}
{% else %}
{% if cookiecutter._directory == "pyramid-app" and cookiecutter.get("postgres") == "yes" %}
{{ program("make_db", {"command": "bin/make_db", "startsecs": "0"}) }}
{% endif %}
{% if cookiecutter._directory == "pyramid-app" %}
{{ program("web", {"command": "gunicorn --paste conf/development.ini --config conf/gunicorn.dev.conf.py"}) }}
{% else %}
{{ program("app", {"command": "python3 -m " + cookiecutter.package_name}) }}
{% endif %}
{% endif %}
[eventlistener:logger]
command=bin/logger --dev
buffer_size=100
events=PROCESS_LOG
stderr_logfile=/dev/fd/1
stderr_logfile_maxbytes=0
stdout_logfile=/dev/null

[unix_http_server]
file = .supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl = unix://.supervisor.sock
prompt = {{ cookiecutter.slug }}
